MinimumWageDataSet <- read.csv("Minimum Wage Data (1).csv")
View(MinimumWageDataSet)
MinimumWageDataSet <- MinimumWageDataSet[,c(3,7)]
View(MinimumWageDataSet)
MinimumWageDataSet <- MinimumWageDataSet[,c(1,2,3,7)]
MinimumWageDataSet <- read.csv("Minimum Wage Data (1).csv")
MinimumWageDataSet <- MinimumWageDataSet[,c(1,2,3,7)]
View(MinimumWageDataSet)
COVID19Dataset <- read.csv("COVID19_state.csv")
View(COVID19Dataset)
COVID19Dataset <- COVID19Dataset[,c(1:5)]
MinimumWageDataSet <- MinimumWageDataSet[MinimumWageDataSet$Year == 2020,]
View(COVID19Dataset)
View(MinimumWageDataSet)
MinimumWageDataSet <- MinimumWageDataSet[,c(1,2,7)]
MinimumWageDataSet <- read.csv("Minimum Wage Data (1).csv")
MinimumWageDataSet <- MinimumWageDataSet[,c(1,2,7)]
COVID19Dataset <- read.csv("COVID19_state.csv")
COVID19Dataset <- COVID19Dataset[,c(1:5)]
MinimumWageDataSet <- MinimumWageDataSet[MinimumWageDataSet$Year == 2020,]
MinimumWageDataSet <- read.csv("Minimum Wage Data (1).csv")
MinimumWageDataSet <- MinimumWageDataSet[,c(1,2,7)]
COVID19Dataset <- read.csv("COVID19_state.csv")
COVID19Dataset <- COVID19Dataset[,c(1:5)]
MinimumWageDataSet <- MinimumWageDataSet[MinimumWageDataSet$Year == 2020,]
View(MinimumWageDataSet)
View(COVID19Dataset)
inner_join(COVID19Dataset, MinimumWageDataSet, by = "state")
library(tidyverse)
inner_join(COVID19Dataset, MinimumWageDataSet, by = "state")
View(MinimumWageDataSet)
View(COVID19Dataset)
inner_join(COVID19Dataset, MinimumWageDataSet, by = "state")
library(tidyverse)
inner_join(COVID19Dataset, MinimumWageDataSet, by = "state")
MinimumWageDataSet <- read.csv("Minimum Wage Data (1).csv")
MinimumWageDataSet <- MinimumWageDataSet[,c(1,2,7)]
COVID19Dataset <- read.csv("COVID19_state.csv")
COVID19Dataset <- COVID19Dataset[,c(1:5)]
MinimumWageDataSet <- MinimumWageDataSet[MinimumWageDataSet$Year == 2020,]
library(tidyverse)
inner_join(COVID19Dataset, MinimumWageDataSet, by = "state")
inner_join(COVID19Dataset, MinimumWageDataSet, by = "State")
View(MinimumWageDataSet)
anti_join(COVID19Dataset, MinimumWageDataSet, by = "State")
anti_join(MinimumWageDataSet, COVID19Dataset, by = "State")
flightsfromnewyork %>% arrange(desc(air_time)) %>% select(dest,air_time) %>%filter(airtime > max(airtime))
flights %>% summarise_all(funs(sum(is.na(.))))
# install.packages("nycflights13")
library(nycflights13)
library(tidyverse)
flights<-flights
airports<-airports
airlines<-airlines
flights<-flights
airports<-airports
airlines<-airlines
##### Explore the `flights` dataset (e.g., run `glimpse(flights)` read the description of each variable in the help by running `?flights`). Notice how many rows/observations there are: That's how many flights left the three big NYC airports in 2013!
### 1.1 (2 pts)
##### Report the number and proportion of NAs for each variable using summarize_all() and/or mutate_all(). Ideally, you will write your own short function(s) to count NAs and apply it to every column via `summarize_all`, but there are other ways.
```{R}
flights %>% summarise_all(funs(sum(is.na(.))))
flights %>% summarise_all(funs(sum(is.na(.))))
flightsfromnewyork <- flights %>% na.omit()
flightsfromnewyork %>% arrange(desc(air_time)) %>% select(dest,air_time) %>%filter(airtime > max(airtime))
flightsfromnewyork <- flights %>% na.omit()
flightsfromnewyork %>% arrange(desc(air_time)) %>% select(dest,air_time) %>%filter(airtime > max(airtime))
View(flightsfromnewyork)
flightsfromnewyork %>% arrange(desc(air_time)) %>% select(dest,air_time) %>%filter(airtime > max(air_time))
flightsfromnewyork <- flights %>% na.omit()
flightsfromnewyork %>% arrange(desc(air_time)) %>% select(dest,air_time) %>%filter(airtime > max(air_time))
flightsfromnewyork %>% arrange(desc(air_time)) %>% select(dest,air_time) %>%filter(air_time > max(air_time))
flightsfromnewyork %>% arrange(desc(air_time)) %>% select(dest,air_time) %>% filter(air_time > max(air_time))
flightsfromnewyork %>% arrange(desc(air_time)) %>% select(dest,air_time) %>% filter(air_time >= max(air_time))
flightswithairlines <- left_join(airlines, flightsfromnewyork, by = "carrier")
flightswithairlines %>% group_by(name) %>% summarise(average = mean(dep_delay)) %>% arrange(desc(average)) %>% slice(1)
flightswithairlines %>% group_by(name) %>% summarise(average = mean(dep_delay)) %>% arrange(average) %>% slice(1)
flightstojoin <- flights %>% inner_join(airports, by = c("dest"="faa"))
airportstojoin <- airports %>% inner_join(flights, by = c("faa"="dest"))
flightstojoin %>% inner_join(airportstojoin, by = c("dest"="faa")) %>% glimpse()
airportstojoin <- inner_join(airports, flights, by = c("faa"="dest"))
airportstojoin %>% inner_join(airportstojoin, by = c("dest"="faa")) %>% glimpse()
airportstojoin  %>% glimpse()
airportstojoin %>% glimpse()
flightsnew <- flightsfromnewyork %>% group_by(origin, month) %>% summarise(average = mean(distance), standard_dev = sd(distance), count = n(), standard_err = standard_dev/sqrt(count)) %>% glimpse()
flightsnew <- flightsfromnewyork %>% group_by(origin, month) %>% summarise(average = mean(distance), standard_dev = sd(distance), count = n(), standard_err = standard_dev/sqrt(count)) %>% glimpse()
flightsnew %>% ggplot(aes(month, average, fill = origin)) + geom_bar(stat = "identity", position = "dodge")  + geom_errorbar(aes(x = month, y = average, ymin = average - standard_err, ymax = average + standard_err), position = "dodge") + facet_grid(origin~.) + theme(legend.position = "none", text = element_text(size = 7)) + scale_x_continuous(breaks = seq(1,12,1), labels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))  + ylab("Mean Number of Flights") + xlab("Month") + ggtitle("Number of Flights by Origin throughout Year")
flightsnew %>% ggplot(aes(month, average, fill = origin)) + geom_bar(stat = "identity", position = "dodge")  + geom_errorbar(aes(x = month, y = average, ymin = average - standard_err, ymax = average + standard_err), position = "dodge") + facet_grid(origin~.) + theme(legend.position = "none", text = element_text(size = 7)) + scale_x_continuous(breaks = seq(1,12,1), labels = c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"))  + ylab("Mean Number of Flights") + xlab("Month") + ggtitle("Number of Flights by Origin throughout Year") + coord_flip()
flightswithairlines %>% group_by(name) %>% summarise(average = mean(dep_delay)) %>% arrange(desc(average)) %>% slice(1)
flightswithairlines %>% group_by(name) %>% summarise(average = mean(dep_delay)) %>% arrange(average) %>% slice(1)
# How many of these airports (variable `faa`) appear in the `flights` dataset as destinations (variable `dest`)?
flights %>% semi_join(airports, by = c("dest"="faa")) %>% select(dest) %>% summarise_all(n_distinct)
# How many of these airports (variable `faa`) appear in the `flights` dataset as destinations (variable `dest`)?
flights %>% inner_join(airports, by = c("dest"="faa")) %>% select(dest) %>% summarise_all(n_distinct)
# How many unique destination airports are there in the flights dataset?
flights %>% select(dest) %>% summarise_all(n_distinct)
# Which destination airports are in the `flights` dataset but missing from the `airports` dataset?
flights %>% anti_join(airports, by = c("dest"="faa")) %>% select(dest) %>% distinct()
inner_join(COVID19Dataset, MinimumWageDataSet, by = "State")
anti_join(MinimumWageDataSet, COVID19Dataset, by = "State")
COVID19Dataset %>% select(State) %>% summarise_all(n_distinct)
MinimumWageDataSet %>% select(State) %>% summarise_all(n_distinct)
library(tidyverse)
MinimumWageDataSet <- read.csv("Minimum Wage Data (1).csv")
MinimumWageDataSet <- MinimumWageDataSet[,c(1,2,7)]
COVID19Dataset <- read.csv("COVID19_state.csv")
COVID19Dataset <- COVID19Dataset[,c(1:5)]
MinimumWageDataSet <- MinimumWageDataSet[MinimumWageDataSet$Year == 2020,]
View(COVID19Dataset)
View(MinimumWageDataSet)
COVID19Dataset %>% select(State) %>% summarise_all(n_distinct)
MinimumWageDataSet %>% select(State) %>% summarise_all(n_distinct)
inner_join(COVID19Dataset, MinimumWageDataSet, by = "State")
anti_join(MinimumWageDataSet, COVID19Dataset, by = "State")
airportstojoin <- inner_join(airports, flights, by = c("faa"="dest"))
airportstojoin %>% glimpse()
airportstojoin <- inner_join(airports, flights, by = c("faa"="dest"))
airportstojoin %>% glimpse()
setwd("~/Desktop/Documents, Schoolwork, and Homework /SDS348 (Introduction to Data Science)/project1")
MinimumWageDataSet <- read.csv("Minimum Wage Data (1).csv")
MinimumWageDataSet <- MinimumWageDataSet[,c(1,2,7)]
COVID19Dataset <- read.csv("COVID19_state.csv")
COVID19Dataset <- COVID19Dataset[,c(1:5)]
MinimumWageDataSet <- MinimumWageDataSet[MinimumWageDataSet$Year == 2020,]
COVID19Dataset %>% select(State) %>% summarise_all(n_distinct)
MinimumWageDataSet %>% select(State) %>% summarise_all(n_distinct)
inner_join(COVID19Dataset, MinimumWageDataSet, by = "State")
anti_join(MinimumWageDataSet, COVID19Dataset, by = "State")
library(tidyverse)
library(tidyverse)
#### Joining/Merging
```{R}
COVID19Dataset %>% select(State) %>% summarise_all(n_distinct)
MinimumWageDataSet %>% select(State) %>% summarise_all(n_distinct)
inner_join(COVID19Dataset, MinimumWageDataSet, by = "State")
anti_join(MinimumWageDataSet, COVID19Dataset, by = "State")
pnorm(0,0.001)
pnorm(0, 0.001)
1 - pnorm(2)
1 - pnorm(3)
zscore3 <- 1 - pnorm(3)
zscore2 <- 1 - pnorm(2)
zscore3 <- 1 - pnorm(3)
zscore2 - zscore3
(zscore2 - zscore3) / zscore2
zscore2 <- 1 - pnorm(2)
zscore3 <- 1 - pnorm(3)
(zscore2 - zscore3) / zscore2
zscore1 <- 1 - pnorm(1)
zscore0.5 <- 1 - pnorm(0.5)
zscore1 / zscore0.5
zscore2 <- 1 - pnorm(2)
zscore0.5 <- 1 - pnorm(0.5)
(zscore2 -zscore0.5)
(zscore0.5 - zscore2) / zscore2
(zscore2 - zscore0.5) / zscore2
(zscore0.5 - zscore2) / zscore(2)
(zscore0.5 - zscore2) / zscore2
zscore0.5 <- 1 - pnorm(0.5)
zscore2 <- 1 - pnorm(2)
zscore0.5 <- 1 - pnorm(0.5)
(zscore0.5 - zscore2) / zscore2
(zscore2 - zscore0.5) / zscore2
(zscore2 - zscore0.5) / zscore2
(zscore0.5 - zscore2) / zscore2
(zscore0.5 - zscore2) / zscore2
zscore0.5 <- pnorm(0,5)
zscore0.5 <- pnorm(0.5)
(zscore - zscore2) / zscore2
(zscore0.5 - zscore2) / zscore2
zscore2 <- pnorm(2)
zscore0.5 <- pnorm(0.5)
(zscore0.5 - zscore2) / zscore2
zscore2 <- pnorm(2)
zscore0.5 <- pnorm(0.5)
(zscore0.5 - zscore2) / zscore2
zscore0.5 <- 1 - pnorm(0.5)
(zscore0.5 - zscore2) / zscore2
zscore2 <- 1 - pnorm(2)
zscore0.5 <- 1 - pnorm(0.5)
(zscore0.5 - zscore2) / zscore2
zscore2 <- pnorm(2)
zscore0.5 <- 1 - pnorm(0.5)
(zscore0.5 - zscore2) / zscore2
(zscore2 - zscore0.5) / zscore2
zscore2 <- pnorm(2)
zscore0.5 <- 1 - pnorm(0.5)
(zscore2 - zscore0.5) / zscore2
zscore2 <- pnorm(3)
smallzscore3 <- pnorm(3)
largerzscore2 <- 1 - pnorm(2)
(smallzscore3 - largerzscore2) / largerzscore2
result1 / result2
# Probability larger than two, smaller than three.
result1 <- pnorm(3) - pnorm(2)
# Probability larger than two.
result2 <- 1 - pnorm(2)
result1 / result2
# Probability larger than one, larger than 1/2.
result1 <- 1 - pnorm(1)
# Probability larger than one, larger than 1/2.
result1 <- 1 - pnorm(0.5)
# Probability larger than one, larger than 1/2.
result1 <- 1 - pnorm(1)
# Probability larger than two.
result2 <- 1 - pnorm(0.5)
result1 / result2
# Probability larger than one, larger than 1/2.
result1 <- 1 - pnorm(1)
# Probability larger than 1/2.
result2 <- 1 - pnorm(0.5)
result1 / result2
# Probability smaller than two, larger than 1/2.
result1 <- pnorm(2) - pnorm(0.5)
# Probability smaller than 2.
result2 <- pnorm(2)
result1 / result2
# Probability smaller than 3, smaller than 5/2.
result1 <- pnorm(2.5)
# Probability smaller than 3.
result2 <- pnorm(3)
result1 / result2
5/3
# Probability larger than 38, larger than 42.
result1 <- pnorm(38,32,6)
# Probability larger than 38, larger than 42.
result1 <- 1 - pnorm(42),32,6)
# Probability larger than 38, larger than 42.
result1 <- 1 - pnorm(42,32,6)
# Probability larger than 38.
result2 <- 1 - pnorm(38,32,6)
result1 / result2
# Probability larger than 38, larger than 42.
result1 <- 1 - pnorm(42,32,6)
# Probability larger than 38.
result2 <- 1 - pnorm(38,32,6)
result1 / result2
